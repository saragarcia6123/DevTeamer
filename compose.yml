name: devteamer
services:
  postgres:
    image: postgres:latest
    env_file:
      - ./db/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:latest
    env_file:
      - ./db/.env
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --requirepass $${REDIS_PASSWORD}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    volumes:
      - ./backend/src:/app/src
      - ./backend/log_conf.yaml:/app/log_conf.yaml
    env_file:
      - ./backend/.env
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/node_modules:/app/node_modules
    env_file:
      - ./frontend/.env
    restart: unless-stopped
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data: